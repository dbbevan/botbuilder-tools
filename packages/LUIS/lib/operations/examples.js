"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("ms-rest-js");
const Mappers = require("../models/examplesMappers");
const Parameters = require("../models/parameters");
/** Class representing a Examples. */
class Examples {
    /**
     * Create a Examples.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Adds a labeled example to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ExampleLabelObject} exampleLabelObject An example label with the expected intent and
     * entities.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addWithHttpOperationResponse(azureRegion, appId, versionId, exampleLabelObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            exampleLabelObject,
            options
        }, addOperationSpec);
    }
    /**
     * Adds a batch of labeled examples to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ExampleLabelObject[]} exampleLabelObjectArray Array of examples.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    batchWithHttpOperationResponse(azureRegion, appId, versionId, exampleLabelObjectArray, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            exampleLabelObjectArray,
            options
        }, batchOperationSpec);
    }
    /**
     * Returns examples to be reviewed.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ExamplesListOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listOperationSpec);
    }
    /**
     * Deletes the labeled example with the specified ID.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} exampleId The example ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteMethodWithHttpOperationResponse(azureRegion, appId, versionId, exampleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            exampleId,
            options
        }, deleteMethodOperationSpec);
    }
    add(azureRegion, appId, versionId, exampleLabelObject, options, callback) {
        return msRest.responseToBody(this.addWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, exampleLabelObject, options, callback);
    }
    batch(azureRegion, appId, versionId, exampleLabelObjectArray, options, callback) {
        return msRest.responseToBody(this.batchWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, exampleLabelObjectArray, options, callback);
    }
    list(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    deleteMethod(azureRegion, appId, versionId, exampleId, options, callback) {
        return msRest.responseToBody(this.deleteMethodWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, exampleId, options, callback);
    }
}
exports.Examples = Examples;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const addOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/example",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "exampleLabelObject",
        mapper: Object.assign({}, Mappers.ExampleLabelObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: Mappers.LabelExampleResponse
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const batchOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/examples",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "exampleLabelObjectArray",
        mapper: {
            required: true,
            serializedName: "exampleLabelObjectArray",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "Composite",
                        className: "ExampleLabelObject"
                    }
                }
            }
        }
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BatchLabelExample"
                        }
                    }
                }
            }
        },
        207: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BatchLabelExample"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/examples",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabeledUtterance"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteMethodOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/examples/{exampleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.exampleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
//# sourceMappingURL=examples.js.map