"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("ms-rest-js");
const Mappers = require("../models/modelMappers");
const Parameters = require("../models/parameters");
/** Class representing a Model. */
class Model {
    /**
     * Create a Model.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Adds an intent classifier to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelCreateObject} intentCreateObject A model object containing the name of the new
     * intent classifier.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addIntentWithHttpOperationResponse(azureRegion, appId, versionId, intentCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            intentCreateObject,
            options
        }, addIntentOperationSpec);
    }
    /**
     * Gets information about the intent models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListIntentsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listIntentsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listIntentsOperationSpec);
    }
    /**
     * Adds an entity extractor to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelCreateObject} modelCreateObject A model object containing the name for the new
     * entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addEntityWithHttpOperationResponse(azureRegion, appId, versionId, modelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            modelCreateObject,
            options
        }, addEntityOperationSpec);
    }
    /**
     * Gets information about the entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListEntitiesOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listEntitiesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listEntitiesOperationSpec);
    }
    /**
     * Adds a hierarchical entity extractor to the application version.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {HierarchicalEntityModel} hierarchicalModelCreateObject A model containing the name and
     * children of the new entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addHierarchicalEntityWithHttpOperationResponse(azureRegion, appId, versionId, hierarchicalModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hierarchicalModelCreateObject,
            options
        }, addHierarchicalEntityOperationSpec);
    }
    /**
     * Gets information about the hierarchical entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListHierarchicalEntitiesOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listHierarchicalEntitiesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listHierarchicalEntitiesOperationSpec);
    }
    /**
     * Adds a composite entity extractor to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {CompositeEntityModel} compositeModelCreateObject A model containing the name and
     * children of the new entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addCompositeEntityWithHttpOperationResponse(azureRegion, appId, versionId, compositeModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            compositeModelCreateObject,
            options
        }, addCompositeEntityOperationSpec);
    }
    /**
     * Gets information about the composite entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListCompositeEntitiesOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listCompositeEntitiesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listCompositeEntitiesOperationSpec);
    }
    /**
     * Gets information about the closedlist models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListClosedListsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listClosedListsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listClosedListsOperationSpec);
    }
    /**
     * Adds a closed list model to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ClosedListModelCreateObject} closedListModelCreateObject A model containing the name and
     * words for the new closed list entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addClosedListWithHttpOperationResponse(azureRegion, appId, versionId, closedListModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            closedListModelCreateObject,
            options
        }, addClosedListOperationSpec);
    }
    /**
     * Adds a list of prebuilt entity extractors to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string[]} prebuiltExtractorNames An array of prebuilt entity extractor names.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addPrebuiltWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltExtractorNames, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltExtractorNames,
            options
        }, addPrebuiltOperationSpec);
    }
    /**
     * Gets information about the prebuilt entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListPrebuiltsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listPrebuiltsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listPrebuiltsOperationSpec);
    }
    /**
     * Gets all the available prebuilt entity extractors for the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listPrebuiltEntitiesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listPrebuiltEntitiesOperationSpec);
    }
    /**
     * Gets information about the application version models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelListModelsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listModelsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listModelsOperationSpec);
    }
    /**
     * Gets the utterances for the given model in the given app version.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} modelId The ID (GUID) of the model.
     *
     * @param {ModelExamplesMethodOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    examplesMethodWithHttpOperationResponse(azureRegion, appId, versionId, modelId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            modelId,
            options
        }, examplesMethodOperationSpec);
    }
    /**
     * Gets information about the intent model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} intentId The intent classifier ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getIntentWithHttpOperationResponse(azureRegion, appId, versionId, intentId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            intentId,
            options
        }, getIntentOperationSpec);
    }
    /**
     * Updates the name of an intent classifier.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} intentId The intent classifier ID.
     *
     * @param {ModelUpdateObject} modelUpdateObject A model object containing the new intent classifier
     * name.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateIntentWithHttpOperationResponse(azureRegion, appId, versionId, intentId, modelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            intentId,
            modelUpdateObject,
            options
        }, updateIntentOperationSpec);
    }
    /**
     * Deletes an intent classifier from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} intentId The intent classifier ID.
     *
     * @param {ModelDeleteIntentOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteIntentWithHttpOperationResponse(azureRegion, appId, versionId, intentId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            intentId,
            options
        }, deleteIntentOperationSpec);
    }
    /**
     * Gets information about the entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getEntityWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getEntityOperationSpec);
    }
    /**
     * Updates the name of an entity extractor.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity extractor ID.
     *
     * @param {ModelUpdateObject} modelUpdateObject A model object containing the new entity extractor
     * name.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateEntityWithHttpOperationResponse(azureRegion, appId, versionId, entityId, modelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            modelUpdateObject,
            options
        }, updateEntityOperationSpec);
    }
    /**
     * Deletes an entity extractor from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteEntityWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, deleteEntityOperationSpec);
    }
    /**
     * Gets information about the hierarchical entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getHierarchicalEntityWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            options
        }, getHierarchicalEntityOperationSpec);
    }
    /**
     * Updates the name and children of a hierarchical entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {HierarchicalEntityModel} hierarchicalModelUpdateObject Model containing names of the
     * children of the hierarchical entity.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateHierarchicalEntityWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, hierarchicalModelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            hierarchicalModelUpdateObject,
            options
        }, updateHierarchicalEntityOperationSpec);
    }
    /**
     * Deletes a hierarchical entity extractor from the application version.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteHierarchicalEntityWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            options
        }, deleteHierarchicalEntityOperationSpec);
    }
    /**
     * Gets information about the composite entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getCompositeEntityWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            options
        }, getCompositeEntityOperationSpec);
    }
    /**
     * Updates the composite entity extractor.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {CompositeEntityModel} compositeModelUpdateObject A model object containing the new
     * entity extractor name and children.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateCompositeEntityWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, compositeModelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            compositeModelUpdateObject,
            options
        }, updateCompositeEntityOperationSpec);
    }
    /**
     * Deletes a composite entity extractor from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteCompositeEntityWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            options
        }, deleteCompositeEntityOperationSpec);
    }
    /**
     * Gets information of a closed list model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list model ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getClosedListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            options
        }, getClosedListOperationSpec);
    }
    /**
     * Updates the closed list model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list model ID.
     *
     * @param {ClosedListModelUpdateObject} closedListModelUpdateObject The new entity name and words
     * list.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateClosedListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, closedListModelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            closedListModelUpdateObject,
            options
        }, updateClosedListOperationSpec);
    }
    /**
     * Adds a batch of sublists to an existing closedlist.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list model ID.
     *
     * @param {ClosedListModelPatchObject} closedListModelPatchObject A words list batch.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    patchClosedListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, closedListModelPatchObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            closedListModelPatchObject,
            options
        }, patchClosedListOperationSpec);
    }
    /**
     * Deletes a closed list model from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list model ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteClosedListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            options
        }, deleteClosedListOperationSpec);
    }
    /**
     * Gets information about the prebuilt entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} prebuiltId The prebuilt entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPrebuiltWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltId,
            options
        }, getPrebuiltOperationSpec);
    }
    /**
     * Deletes a prebuilt entity extractor from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} prebuiltId The prebuilt entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePrebuiltWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltId,
            options
        }, deletePrebuiltOperationSpec);
    }
    /**
     * Deletes a sublist of a specific closed list model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list entity extractor ID.
     *
     * @param {number} subListId The sublist ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteSubListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, subListId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            subListId,
            options
        }, deleteSubListOperationSpec);
    }
    /**
     * Updates one of the closed list's sublists.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list entity extractor ID.
     *
     * @param {number} subListId The sublist ID.
     *
     * @param {WordListBaseUpdateObject} wordListBaseUpdateObject A sublist update object containing
     * the new canonical form and the list of words.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateSubListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, subListId, wordListBaseUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            subListId,
            wordListBaseUpdateObject,
            options
        }, updateSubListOperationSpec);
    }
    /**
     * Suggests examples that would improve the accuracy of the intent model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} intentId The intent classifier ID.
     *
     * @param {ModelGetIntentSuggestionsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getIntentSuggestionsWithHttpOperationResponse(azureRegion, appId, versionId, intentId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            intentId,
            options
        }, getIntentSuggestionsOperationSpec);
    }
    /**
     * Get suggestion examples that would improve the accuracy of the entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The target entity extractor model to enhance.
     *
     * @param {ModelGetEntitySuggestionsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getEntitySuggestionsWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getEntitySuggestionsOperationSpec);
    }
    /**
     * Adds a list to an existing closed list.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} clEntityId The closed list entity extractor ID.
     *
     * @param {WordListObject} wordListCreateObject Words list.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addSubListWithHttpOperationResponse(azureRegion, appId, versionId, clEntityId, wordListCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            clEntityId,
            wordListCreateObject,
            options
        }, addSubListOperationSpec);
    }
    /**
     * Adds a customizable prebuilt domain along with all of its models to this application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PrebuiltDomainCreateBaseObject} prebuiltDomainObject A prebuilt domain create object
     * containing the name of the domain.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addCustomPrebuiltDomainWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltDomainObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltDomainObject,
            options
        }, addCustomPrebuiltDomainOperationSpec);
    }
    /**
     * Adds a custom prebuilt intent model to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PrebuiltDomainModelCreateObject} prebuiltDomainModelCreateObject A model object
     * containing the name of the custom prebuilt intent and the name of the domain to which this model
     * belongs.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addCustomPrebuiltIntentWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltDomainModelCreateObject,
            options
        }, addCustomPrebuiltIntentOperationSpec);
    }
    /**
     * Gets custom prebuilt intents information of this application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listCustomPrebuiltIntentsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listCustomPrebuiltIntentsOperationSpec);
    }
    /**
     * Adds a custom prebuilt entity model to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PrebuiltDomainModelCreateObject} prebuiltDomainModelCreateObject A model object
     * containing the name of the custom prebuilt entity and the name of the domain to which this model
     * belongs.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addCustomPrebuiltEntityWithHttpOperationResponse(azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            prebuiltDomainModelCreateObject,
            options
        }, addCustomPrebuiltEntityOperationSpec);
    }
    /**
     * Gets all custom prebuilt entities information of this application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listCustomPrebuiltEntitiesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listCustomPrebuiltEntitiesOperationSpec);
    }
    /**
     * Gets all custom prebuilt models information of this application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listCustomPrebuiltModelsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listCustomPrebuiltModelsOperationSpec);
    }
    /**
     * Deletes a prebuilt domain's models from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} domainName Domain name.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteCustomPrebuiltDomainWithHttpOperationResponse(azureRegion, appId, versionId, domainName, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            domainName,
            options
        }, deleteCustomPrebuiltDomainOperationSpec);
    }
    /**
     * Gets information about the hierarchical entity child model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} hChildId The hierarchical entity extractor child ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getHierarchicalEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, hChildId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            hChildId,
            options
        }, getHierarchicalEntityChildOperationSpec);
    }
    /**
     * Renames a single child in an existing hierarchical entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} hChildId The hierarchical entity extractor child ID.
     *
     * @param {HierarchicalChildModelUpdateObject} hierarchicalChildModelUpdateObject Model object
     * containing new name of the hierarchical entity child.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateHierarchicalEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, hChildId, hierarchicalChildModelUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            hChildId,
            hierarchicalChildModelUpdateObject,
            options
        }, updateHierarchicalEntityChildOperationSpec);
    }
    /**
     * Deletes a hierarchical entity extractor child from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} hChildId The hierarchical entity extractor child ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteHierarchicalEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, hChildId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            hChildId,
            options
        }, deleteHierarchicalEntityChildOperationSpec);
    }
    /**
     * Creates a single child in an existing hierarchical entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {HierarchicalChildModelCreateObject} hierarchicalChildModelCreateObject A model object
     * containing the name of the new hierarchical child model.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addHierarchicalEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, hierarchicalChildModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            hierarchicalChildModelCreateObject,
            options
        }, addHierarchicalEntityChildOperationSpec);
    }
    /**
     * Creates a single child in an existing composite entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {CompositeChildModelCreateObject} compositeChildModelCreateObject A model object
     * containing the name of the new composite child model.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addCompositeEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, compositeChildModelCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            compositeChildModelCreateObject,
            options
        }, addCompositeEntityChildOperationSpec);
    }
    /**
     * Deletes a composite entity extractor child from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {string} cChildId The hierarchical entity extractor child ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteCompositeEntityChildWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, cChildId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            cChildId,
            options
        }, deleteCompositeEntityChildOperationSpec);
    }
    /**
     * @summary Gets information about the regex entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelGetRegexEntityInfosOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getRegexEntityInfosWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, getRegexEntityInfosOperationSpec);
    }
    /**
     * @summary Adds a regex entity model to the application version.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {RegexModelCreateObject} regexEntityExtractorCreateObj A model object containing the name
     * and regex pattern for the new regex entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createRegexEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, regexEntityExtractorCreateObj, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            regexEntityExtractorCreateObj,
            options
        }, createRegexEntityModelOperationSpec);
    }
    /**
     * @summary Get information about the Pattern.Any entity models.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {ModelGetPatternAnyEntityInfosOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPatternAnyEntityInfosWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, getPatternAnyEntityInfosOperationSpec);
    }
    /**
     * @summary Adds a pattern.any entity extractor to the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PatternAnyModelCreateObject} extractorCreateObject A model object containing the name
     * and explicit list for the new Pattern.Any entity extractor.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createPatternAnyEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, extractorCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            extractorCreateObject,
            options
        }, createPatternAnyEntityModelOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPrebuiltEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getPrebuiltEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createPrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createPrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getClosedListEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getClosedListEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createClosedListEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createClosedListEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getRegexEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getRegexEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createRegexEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createRegexEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getCompositeEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            options
        }, getCompositeEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createCompositeEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            entityRoleCreateObject,
            options
        }, createCompositeEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPatternAnyEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getPatternAnyEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createPatternAnyEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createPatternAnyEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getHierarchicalEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            options
        }, getHierarchicalEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createHierarchicalEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            entityRoleCreateObject,
            options
        }, createHierarchicalEntityRoleOperationSpec);
    }
    /**
     * @summary Get All Entity Roles for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity Id
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getCustomPrebuiltEntityRolesWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getCustomPrebuiltEntityRolesOperationSpec);
    }
    /**
     * @summary Create an entity role for an entity in the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity model ID.
     *
     * @param {EntityRoleCreateObject} entityRoleCreateObject An entity role object containing the name
     * of role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createCustomPrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            entityRoleCreateObject,
            options
        }, createCustomPrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Get the explicit list of the pattern.any entity.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getExplicitListWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getExplicitListOperationSpec);
    }
    /**
     * @summary Add a new item to the explicit list for the Pattern.Any entity.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity extractor ID.
     *
     * @param {ExplicitListItemCreateObject} item The new explicit list item.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addExplicitListItemWithHttpOperationResponse(azureRegion, appId, versionId, entityId, item, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            item,
            options
        }, addExplicitListItemOperationSpec);
    }
    /**
     * @summary Gets information of a regex entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} regexEntityId The regex entity model ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getRegexEntityEntityInfoWithHttpOperationResponse(azureRegion, appId, versionId, regexEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            regexEntityId,
            options
        }, getRegexEntityEntityInfoOperationSpec);
    }
    /**
     * @summary Updates the regex entity model .
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} regexEntityId The regex entity extractor ID.
     *
     * @param {RegexModelUpdateObject} regexEntityUpdateObject An object containing the new entity name
     * and regex pattern.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateRegexEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, regexEntityId, regexEntityUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            regexEntityId,
            regexEntityUpdateObject,
            options
        }, updateRegexEntityModelOperationSpec);
    }
    /**
     * @summary Deletes a regex entity model from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} regexEntityId The regex entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteRegexEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, regexEntityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            regexEntityId,
            options
        }, deleteRegexEntityModelOperationSpec);
    }
    /**
     * @summary Gets information about the application version's Pattern.Any model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPatternAnyEntityInfoWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, getPatternAnyEntityInfoOperationSpec);
    }
    /**
     * @summary Updates the name and explicit list of a Pattern.Any entity model.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity extractor ID.
     *
     * @param {PatternAnyModelUpdateObject} patternAnyUpdateObject An object containing the explicit
     * list of the Pattern.Any entity.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updatePatternAnyEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, entityId, patternAnyUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            patternAnyUpdateObject,
            options
        }, updatePatternAnyEntityModelOperationSpec);
    }
    /**
     * @summary Deletes a Pattern.Any entity extractor from the application.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity extractor ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePatternAnyEntityModelWithHttpOperationResponse(azureRegion, appId, versionId, entityId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            options
        }, deletePatternAnyEntityModelOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deleteEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getPrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updatePrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updatePrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deletePrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getClosedListEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getClosedListEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateClosedListEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateClosedListEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteClosedListEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deleteClosedListEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getRegexEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getRegexEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateRegexEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateRegexEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteRegexEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deleteRegexEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getCompositeEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            roleId,
            options
        }, getCompositeEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateCompositeEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateCompositeEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} cEntityId The composite entity extractor ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteCompositeEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, cEntityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            cEntityId,
            roleId,
            options
        }, deleteCompositeEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPatternAnyEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getPatternAnyEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updatePatternAnyEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updatePatternAnyEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePatternAnyEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deletePatternAnyEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getHierarchicalEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            roleId,
            options
        }, getHierarchicalEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateHierarchicalEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateHierarchicalEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} hEntityId The hierarchical entity extractor ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteHierarchicalEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, hEntityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            hEntityId,
            roleId,
            options
        }, deleteHierarchicalEntityRoleOperationSpec);
    }
    /**
     * @summary Get one entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId entity ID.
     *
     * @param {string} roleId entity role ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getCustomEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, getCustomEntityRoleOperationSpec);
    }
    /**
     * @summary Update an entity role for a given entity
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role ID.
     *
     * @param {EntityRoleUpdateObject} entityRoleUpdateObject The new entity role.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateCustomPrebuiltEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            entityRoleUpdateObject,
            options
        }, updateCustomPrebuiltEntityRoleOperationSpec);
    }
    /**
     * @summary Delete an entity role.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The entity ID.
     *
     * @param {string} roleId The entity role Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteCustomEntityRoleWithHttpOperationResponse(azureRegion, appId, versionId, entityId, roleId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            roleId,
            options
        }, deleteCustomEntityRoleOperationSpec);
    }
    /**
     * @summary Get the explicit list of the pattern.any entity.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity Id.
     *
     * @param {number} itemId The explicit list item Id.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getExplicitListItemWithHttpOperationResponse(azureRegion, appId, versionId, entityId, itemId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            itemId,
            options
        }, getExplicitListItemOperationSpec);
    }
    /**
     * @summary Updates an explicit list item for a Pattern.Any entity.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The Pattern.Any entity extractor ID.
     *
     * @param {number} itemId The explicit list item ID.
     *
     * @param {ExplicitListItemUpdateObject} item The new explicit list item.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updateExplicitListItemWithHttpOperationResponse(azureRegion, appId, versionId, entityId, itemId, item, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            itemId,
            item,
            options
        }, updateExplicitListItemOperationSpec);
    }
    /**
     * @summary Delete the explicit list item from the Pattern.any explicit list.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {string} entityId The pattern.any entity id.
     *
     * @param {number} itemId The explicit list item which will be deleted.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deleteExplicitListItemWithHttpOperationResponse(azureRegion, appId, versionId, entityId, itemId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            entityId,
            itemId,
            options
        }, deleteExplicitListItemOperationSpec);
    }
    addIntent(azureRegion, appId, versionId, intentCreateObject, options, callback) {
        return msRest.responseToBody(this.addIntentWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, intentCreateObject, options, callback);
    }
    listIntents(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listIntentsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addEntity(azureRegion, appId, versionId, modelCreateObject, options, callback) {
        return msRest.responseToBody(this.addEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, modelCreateObject, options, callback);
    }
    listEntities(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listEntitiesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addHierarchicalEntity(azureRegion, appId, versionId, hierarchicalModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addHierarchicalEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hierarchicalModelCreateObject, options, callback);
    }
    listHierarchicalEntities(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listHierarchicalEntitiesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addCompositeEntity(azureRegion, appId, versionId, compositeModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addCompositeEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, compositeModelCreateObject, options, callback);
    }
    listCompositeEntities(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listCompositeEntitiesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    listClosedLists(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listClosedListsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addClosedList(azureRegion, appId, versionId, closedListModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addClosedListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, closedListModelCreateObject, options, callback);
    }
    addPrebuilt(azureRegion, appId, versionId, prebuiltExtractorNames, options, callback) {
        return msRest.responseToBody(this.addPrebuiltWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltExtractorNames, options, callback);
    }
    listPrebuilts(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listPrebuiltsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    listPrebuiltEntities(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listPrebuiltEntitiesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    listModels(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listModelsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    examplesMethod(azureRegion, appId, versionId, modelId, options, callback) {
        return msRest.responseToBody(this.examplesMethodWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, modelId, options, callback);
    }
    getIntent(azureRegion, appId, versionId, intentId, options, callback) {
        return msRest.responseToBody(this.getIntentWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, intentId, options, callback);
    }
    updateIntent(azureRegion, appId, versionId, intentId, modelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateIntentWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, intentId, modelUpdateObject, options, callback);
    }
    deleteIntent(azureRegion, appId, versionId, intentId, options, callback) {
        return msRest.responseToBody(this.deleteIntentWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, intentId, options, callback);
    }
    getEntity(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    updateEntity(azureRegion, appId, versionId, entityId, modelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, modelUpdateObject, options, callback);
    }
    deleteEntity(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.deleteEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    getHierarchicalEntity(azureRegion, appId, versionId, hEntityId, options, callback) {
        return msRest.responseToBody(this.getHierarchicalEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, options, callback);
    }
    updateHierarchicalEntity(azureRegion, appId, versionId, hEntityId, hierarchicalModelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateHierarchicalEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, hierarchicalModelUpdateObject, options, callback);
    }
    deleteHierarchicalEntity(azureRegion, appId, versionId, hEntityId, options, callback) {
        return msRest.responseToBody(this.deleteHierarchicalEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, options, callback);
    }
    getCompositeEntity(azureRegion, appId, versionId, cEntityId, options, callback) {
        return msRest.responseToBody(this.getCompositeEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, options, callback);
    }
    updateCompositeEntity(azureRegion, appId, versionId, cEntityId, compositeModelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateCompositeEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, compositeModelUpdateObject, options, callback);
    }
    deleteCompositeEntity(azureRegion, appId, versionId, cEntityId, options, callback) {
        return msRest.responseToBody(this.deleteCompositeEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, options, callback);
    }
    getClosedList(azureRegion, appId, versionId, clEntityId, options, callback) {
        return msRest.responseToBody(this.getClosedListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, options, callback);
    }
    updateClosedList(azureRegion, appId, versionId, clEntityId, closedListModelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateClosedListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, closedListModelUpdateObject, options, callback);
    }
    patchClosedList(azureRegion, appId, versionId, clEntityId, closedListModelPatchObject, options, callback) {
        return msRest.responseToBody(this.patchClosedListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, closedListModelPatchObject, options, callback);
    }
    deleteClosedList(azureRegion, appId, versionId, clEntityId, options, callback) {
        return msRest.responseToBody(this.deleteClosedListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, options, callback);
    }
    getPrebuilt(azureRegion, appId, versionId, prebuiltId, options, callback) {
        return msRest.responseToBody(this.getPrebuiltWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltId, options, callback);
    }
    deletePrebuilt(azureRegion, appId, versionId, prebuiltId, options, callback) {
        return msRest.responseToBody(this.deletePrebuiltWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltId, options, callback);
    }
    deleteSubList(azureRegion, appId, versionId, clEntityId, subListId, options, callback) {
        return msRest.responseToBody(this.deleteSubListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, subListId, options, callback);
    }
    updateSubList(azureRegion, appId, versionId, clEntityId, subListId, wordListBaseUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateSubListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, subListId, wordListBaseUpdateObject, options, callback);
    }
    getIntentSuggestions(azureRegion, appId, versionId, intentId, options, callback) {
        return msRest.responseToBody(this.getIntentSuggestionsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, intentId, options, callback);
    }
    getEntitySuggestions(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getEntitySuggestionsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    addSubList(azureRegion, appId, versionId, clEntityId, wordListCreateObject, options, callback) {
        return msRest.responseToBody(this.addSubListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, clEntityId, wordListCreateObject, options, callback);
    }
    addCustomPrebuiltDomain(azureRegion, appId, versionId, prebuiltDomainObject, options, callback) {
        return msRest.responseToBody(this.addCustomPrebuiltDomainWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltDomainObject, options, callback);
    }
    addCustomPrebuiltIntent(azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addCustomPrebuiltIntentWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options, callback);
    }
    listCustomPrebuiltIntents(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listCustomPrebuiltIntentsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addCustomPrebuiltEntity(azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addCustomPrebuiltEntityWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, prebuiltDomainModelCreateObject, options, callback);
    }
    listCustomPrebuiltEntities(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listCustomPrebuiltEntitiesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    listCustomPrebuiltModels(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listCustomPrebuiltModelsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    deleteCustomPrebuiltDomain(azureRegion, appId, versionId, domainName, options, callback) {
        return msRest.responseToBody(this.deleteCustomPrebuiltDomainWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, domainName, options, callback);
    }
    getHierarchicalEntityChild(azureRegion, appId, versionId, hEntityId, hChildId, options, callback) {
        return msRest.responseToBody(this.getHierarchicalEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, hChildId, options, callback);
    }
    updateHierarchicalEntityChild(azureRegion, appId, versionId, hEntityId, hChildId, hierarchicalChildModelUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateHierarchicalEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, hChildId, hierarchicalChildModelUpdateObject, options, callback);
    }
    deleteHierarchicalEntityChild(azureRegion, appId, versionId, hEntityId, hChildId, options, callback) {
        return msRest.responseToBody(this.deleteHierarchicalEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, hChildId, options, callback);
    }
    addHierarchicalEntityChild(azureRegion, appId, versionId, hEntityId, hierarchicalChildModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addHierarchicalEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, hierarchicalChildModelCreateObject, options, callback);
    }
    addCompositeEntityChild(azureRegion, appId, versionId, cEntityId, compositeChildModelCreateObject, options, callback) {
        return msRest.responseToBody(this.addCompositeEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, compositeChildModelCreateObject, options, callback);
    }
    deleteCompositeEntityChild(azureRegion, appId, versionId, cEntityId, cChildId, options, callback) {
        return msRest.responseToBody(this.deleteCompositeEntityChildWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, cChildId, options, callback);
    }
    getRegexEntityInfos(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.getRegexEntityInfosWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    createRegexEntityModel(azureRegion, appId, versionId, regexEntityExtractorCreateObj, options, callback) {
        return msRest.responseToBody(this.createRegexEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, regexEntityExtractorCreateObj, options, callback);
    }
    getPatternAnyEntityInfos(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.getPatternAnyEntityInfosWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    createPatternAnyEntityModel(azureRegion, appId, versionId, extractorCreateObject, options, callback) {
        return msRest.responseToBody(this.createPatternAnyEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, extractorCreateObject, options, callback);
    }
    getEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getPrebuiltEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getPrebuiltEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createPrebuiltEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createPrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getClosedListEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getClosedListEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createClosedListEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createClosedListEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getRegexEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getRegexEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createRegexEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createRegexEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getCompositeEntityRoles(azureRegion, appId, versionId, cEntityId, options, callback) {
        return msRest.responseToBody(this.getCompositeEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, options, callback);
    }
    createCompositeEntityRole(azureRegion, appId, versionId, cEntityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createCompositeEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, entityRoleCreateObject, options, callback);
    }
    getPatternAnyEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getPatternAnyEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createPatternAnyEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createPatternAnyEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getHierarchicalEntityRoles(azureRegion, appId, versionId, hEntityId, options, callback) {
        return msRest.responseToBody(this.getHierarchicalEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, options, callback);
    }
    createHierarchicalEntityRole(azureRegion, appId, versionId, hEntityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createHierarchicalEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, entityRoleCreateObject, options, callback);
    }
    getCustomPrebuiltEntityRoles(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getCustomPrebuiltEntityRolesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    createCustomPrebuiltEntityRole(azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback) {
        return msRest.responseToBody(this.createCustomPrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, entityRoleCreateObject, options, callback);
    }
    getExplicitList(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getExplicitListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    addExplicitListItem(azureRegion, appId, versionId, entityId, item, options, callback) {
        return msRest.responseToBody(this.addExplicitListItemWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, item, options, callback);
    }
    getRegexEntityEntityInfo(azureRegion, appId, versionId, regexEntityId, options, callback) {
        return msRest.responseToBody(this.getRegexEntityEntityInfoWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, regexEntityId, options, callback);
    }
    updateRegexEntityModel(azureRegion, appId, versionId, regexEntityId, regexEntityUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateRegexEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, regexEntityId, regexEntityUpdateObject, options, callback);
    }
    deleteRegexEntityModel(azureRegion, appId, versionId, regexEntityId, options, callback) {
        return msRest.responseToBody(this.deleteRegexEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, regexEntityId, options, callback);
    }
    getPatternAnyEntityInfo(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.getPatternAnyEntityInfoWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    updatePatternAnyEntityModel(azureRegion, appId, versionId, entityId, patternAnyUpdateObject, options, callback) {
        return msRest.responseToBody(this.updatePatternAnyEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, patternAnyUpdateObject, options, callback);
    }
    deletePatternAnyEntityModel(azureRegion, appId, versionId, entityId, options, callback) {
        return msRest.responseToBody(this.deletePatternAnyEntityModelWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, options, callback);
    }
    getEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updateEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getPrebuiltEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getPrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updatePrebuiltEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updatePrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deletePrebuiltEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deletePrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getClosedListEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getClosedListEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updateClosedListEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateClosedListEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteClosedListEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteClosedListEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getRegexEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getRegexEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updateRegexEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateRegexEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteRegexEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteRegexEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getCompositeEntityRole(azureRegion, appId, versionId, cEntityId, roleId, options, callback) {
        return msRest.responseToBody(this.getCompositeEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, roleId, options, callback);
    }
    updateCompositeEntityRole(azureRegion, appId, versionId, cEntityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateCompositeEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteCompositeEntityRole(azureRegion, appId, versionId, cEntityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteCompositeEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, cEntityId, roleId, options, callback);
    }
    getPatternAnyEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getPatternAnyEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updatePatternAnyEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updatePatternAnyEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deletePatternAnyEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deletePatternAnyEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getHierarchicalEntityRole(azureRegion, appId, versionId, hEntityId, roleId, options, callback) {
        return msRest.responseToBody(this.getHierarchicalEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, roleId, options, callback);
    }
    updateHierarchicalEntityRole(azureRegion, appId, versionId, hEntityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateHierarchicalEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteHierarchicalEntityRole(azureRegion, appId, versionId, hEntityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteHierarchicalEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, hEntityId, roleId, options, callback);
    }
    getCustomEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.getCustomEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    updateCustomPrebuiltEntityRole(azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback) {
        return msRest.responseToBody(this.updateCustomPrebuiltEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, entityRoleUpdateObject, options, callback);
    }
    deleteCustomEntityRole(azureRegion, appId, versionId, entityId, roleId, options, callback) {
        return msRest.responseToBody(this.deleteCustomEntityRoleWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, roleId, options, callback);
    }
    getExplicitListItem(azureRegion, appId, versionId, entityId, itemId, options, callback) {
        return msRest.responseToBody(this.getExplicitListItemWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, itemId, options, callback);
    }
    updateExplicitListItem(azureRegion, appId, versionId, entityId, itemId, item, options, callback) {
        return msRest.responseToBody(this.updateExplicitListItemWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, itemId, item, options, callback);
    }
    deleteExplicitListItem(azureRegion, appId, versionId, entityId, itemId, options, callback) {
        return msRest.responseToBody(this.deleteExplicitListItemWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, entityId, itemId, options, callback);
    }
}
exports.Model = Model;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const addIntentOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "intentCreateObject",
        mapper: Object.assign({}, Mappers.ModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {}
    },
    serializer
};
const listIntentsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IntentClassifier"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addEntityOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "modelCreateObject",
        mapper: Object.assign({}, Mappers.ModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listEntitiesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addHierarchicalEntityOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "hierarchicalModelCreateObject",
        mapper: Object.assign({}, Mappers.HierarchicalEntityModel, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listHierarchicalEntitiesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "HierarchicalEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addCompositeEntityOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "compositeModelCreateObject",
        mapper: Object.assign({}, Mappers.CompositeEntityModel, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listCompositeEntitiesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CompositeEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listClosedListsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ClosedListEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addClosedListOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "closedListModelCreateObject",
        mapper: Object.assign({}, Mappers.ClosedListModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addPrebuiltOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "prebuiltExtractorNames",
        mapper: {
            required: true,
            serializedName: "prebuiltExtractorNames",
            type: {
                name: "Sequence",
                element: {
                    type: {
                        name: "String"
                    }
                }
            }
        }
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrebuiltEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listPrebuiltsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrebuiltEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listPrebuiltEntitiesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/listprebuilts",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "AvailablePrebuiltEntityModel"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listModelsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/models",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ModelInfoResponse"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const examplesMethodOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/models/{modelId}/examples",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.modelId
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LabelTextObject"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getIntentOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents/{intentId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.intentId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.IntentClassifier
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateIntentOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents/{intentId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.intentId
    ],
    requestBody: {
        parameterPath: "modelUpdateObject",
        mapper: Object.assign({}, Mappers.ModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteIntentOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents/{intentId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.intentId
    ],
    queryParameters: [
        Parameters.deleteUtterances
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getEntityOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateEntityOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "modelUpdateObject",
        mapper: Object.assign({}, Mappers.ModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteEntityOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getHierarchicalEntityOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.HierarchicalEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateHierarchicalEntityOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    requestBody: {
        parameterPath: "hierarchicalModelUpdateObject",
        mapper: Object.assign({}, Mappers.HierarchicalEntityModel, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteHierarchicalEntityOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getCompositeEntityOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.CompositeEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateCompositeEntityOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    requestBody: {
        parameterPath: "compositeModelUpdateObject",
        mapper: Object.assign({}, Mappers.CompositeEntityModel, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteCompositeEntityOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getClosedListOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ClosedListEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateClosedListOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId
    ],
    requestBody: {
        parameterPath: "closedListModelUpdateObject",
        mapper: Object.assign({}, Mappers.ClosedListModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const patchClosedListOperationSpec = {
    httpMethod: "PATCH",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId
    ],
    requestBody: {
        parameterPath: "closedListModelPatchObject",
        mapper: Object.assign({}, Mappers.ClosedListModelPatchObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteClosedListOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPrebuiltOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.prebuiltId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PrebuiltEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePrebuiltOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{prebuiltId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.prebuiltId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteSubListOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId,
        Parameters.subListId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateSubListOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists/{subListId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId,
        Parameters.subListId
    ],
    requestBody: {
        parameterPath: "wordListBaseUpdateObject",
        mapper: Object.assign({}, Mappers.WordListBaseUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getIntentSuggestionsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/intents/{intentId}/suggest",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.intentId
    ],
    queryParameters: [
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IntentsSuggestionExample"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getEntitySuggestionsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/suggest",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    queryParameters: [
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntitiesSuggestionExample"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addSubListOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{clEntityId}/sublists",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.clEntityId
    ],
    requestBody: {
        parameterPath: "wordListCreateObject",
        mapper: Object.assign({}, Mappers.WordListObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Number"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addCustomPrebuiltDomainOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltdomains",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "prebuiltDomainObject",
        mapper: Object.assign({}, Mappers.PrebuiltDomainCreateBaseObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Uuid"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addCustomPrebuiltIntentOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltintents",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "prebuiltDomainModelCreateObject",
        mapper: Object.assign({}, Mappers.PrebuiltDomainModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listCustomPrebuiltIntentsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltintents",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "IntentClassifier"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addCustomPrebuiltEntityOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "prebuiltDomainModelCreateObject",
        mapper: Object.assign({}, Mappers.PrebuiltDomainModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listCustomPrebuiltEntitiesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listCustomPrebuiltModelsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltmodels",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "CustomPrebuiltModel"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteCustomPrebuiltDomainOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltdomains/{domainName}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.domainName
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getHierarchicalEntityChildOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.hChildId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.HierarchicalChildEntity
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateHierarchicalEntityChildOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.hChildId
    ],
    requestBody: {
        parameterPath: "hierarchicalChildModelUpdateObject",
        mapper: Object.assign({}, Mappers.HierarchicalChildModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteHierarchicalEntityChildOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children/{hChildId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.hChildId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addHierarchicalEntityChildOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/children",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    requestBody: {
        parameterPath: "hierarchicalChildModelCreateObject",
        mapper: Object.assign({}, Mappers.HierarchicalChildModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addCompositeEntityChildOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    requestBody: {
        parameterPath: "compositeChildModelCreateObject",
        mapper: Object.assign({}, Mappers.CompositeChildModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteCompositeEntityChildOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/children/{cChildId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId,
        Parameters.cChildId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getRegexEntityInfosOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RegexEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createRegexEntityModelOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "regexEntityExtractorCreateObj",
        mapper: Object.assign({}, Mappers.RegexModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPatternAnyEntityInfosOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PatternAnyEntityExtractor"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createPatternAnyEntityModelOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "extractorCreateObject",
        mapper: Object.assign({}, Mappers.PatternAnyModelCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPrebuiltEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createPrebuiltEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getClosedListEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createClosedListEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getRegexEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createRegexEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getCompositeEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createCompositeEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPatternAnyEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createPatternAnyEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getHierarchicalEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createHierarchicalEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getCustomPrebuiltEntityRolesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EntityRole"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const createCustomPrebuiltEntityRoleOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "entityRoleCreateObject",
        mapper: Object.assign({}, Mappers.EntityRoleCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Uuid"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getExplicitListOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExplicitListItem"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addExplicitListItemOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "item",
        mapper: Object.assign({}, Mappers.ExplicitListItemCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Number"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getRegexEntityEntityInfoOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.regexEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.RegexEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateRegexEntityModelOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.regexEntityId
    ],
    requestBody: {
        parameterPath: "regexEntityUpdateObject",
        mapper: Object.assign({}, Mappers.RegexModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteRegexEntityModelOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{regexEntityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.regexEntityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPatternAnyEntityInfoOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PatternAnyEntityExtractor
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updatePatternAnyEntityModelOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    requestBody: {
        parameterPath: "patternAnyUpdateObject",
        mapper: Object.assign({}, Mappers.PatternAnyModelUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePatternAnyEntityModelOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/entities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPrebuiltEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updatePrebuiltEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePrebuiltEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/prebuilts/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getClosedListEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateClosedListEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteClosedListEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/closedlists/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getRegexEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateRegexEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteRegexEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/regexentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getCompositeEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateCompositeEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteCompositeEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/compositeentities/{cEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.cEntityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPatternAnyEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updatePatternAnyEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePatternAnyEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getHierarchicalEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateHierarchicalEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteHierarchicalEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/hierarchicalentities/{hEntityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.hEntityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getCustomEntityRoleOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.EntityRole
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateCustomPrebuiltEntityRoleOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    requestBody: {
        parameterPath: "entityRoleUpdateObject",
        mapper: Object.assign({}, Mappers.EntityRoleUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteCustomEntityRoleOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/customprebuiltentities/{entityId}/roles/{roleId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.roleId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getExplicitListItemOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.itemId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.ExplicitListItem
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updateExplicitListItemOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.itemId
    ],
    requestBody: {
        parameterPath: "item",
        mapper: Object.assign({}, Mappers.ExplicitListItemUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deleteExplicitListItemOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patternanyentities/{entityId}/explicitlist/{itemId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.entityId,
        Parameters.itemId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
//# sourceMappingURL=model.js.map