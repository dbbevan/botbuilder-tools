"use strict";
/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const msRest = require("ms-rest-js");
const Mappers = require("../models/featuresMappers");
const Parameters = require("../models/parameters");
/** Class representing a Features. */
class Features {
    /**
     * Create a Features.
     * @param {LuisAuthoringContext} client Reference to the service client.
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Creates a new pattern feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PatternCreateObject} patternCreateObject The Name and Pattern of the feature.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    createPatternFeatureWithHttpOperationResponse(azureRegion, appId, versionId, patternCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            patternCreateObject,
            options
        }, createPatternFeatureOperationSpec);
    }
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Gets all the pattern features.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {FeaturesGetApplicationVersionPatternFeaturesOptionalParams} [options] Optional
     * Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getApplicationVersionPatternFeaturesWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, getApplicationVersionPatternFeaturesOperationSpec);
    }
    /**
     * Creates a new phraselist feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {PhraselistCreateObject} phraselistCreateObject A Phraselist object containing Name,
     * comma-separated Phrases and the isExchangeable boolean. Default value for isExchangeable is
     * true.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    addPhraseListWithHttpOperationResponse(azureRegion, appId, versionId, phraselistCreateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            phraselistCreateObject,
            options
        }, addPhraseListOperationSpec);
    }
    /**
     * Gets all the phraselist features.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {FeaturesListPhraseListsOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listPhraseListsWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listPhraseListsOperationSpec);
    }
    /**
     * Gets all the extraction features for the specified application version.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {FeaturesListOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    listWithHttpOperationResponse(azureRegion, appId, versionId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            options
        }, listOperationSpec);
    }
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Gets the specified pattern feature's
     * info.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} patternId The pattern feature ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPatternFeatureInfoWithHttpOperationResponse(azureRegion, appId, versionId, patternId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            patternId,
            options
        }, getPatternFeatureInfoOperationSpec);
    }
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Updates the pattern, the name and the
     * state of the pattern feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} patternId The pattern feature ID.
     *
     * @param {PatternUpdateObject} patternUpdateObject The new values for: - Just a boolean called
     * IsActive, in which case the status of the feature will be changed. - Name, Pattern and a boolean
     * called IsActive to update the feature.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updatePatternFeatureWithHttpOperationResponse(azureRegion, appId, versionId, patternId, patternUpdateObject, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            patternId,
            patternUpdateObject,
            options
        }, updatePatternFeatureOperationSpec);
    }
    /**
     * [DEPRECATED NOTICE: This operation will soon be removed] Deletes a pattern feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} patternId The pattern feature ID.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePatternFeatureWithHttpOperationResponse(azureRegion, appId, versionId, patternId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            patternId,
            options
        }, deletePatternFeatureOperationSpec);
    }
    /**
     * Gets phraselist feature info.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} phraselistId The ID of the feature to be retrieved.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    getPhraseListWithHttpOperationResponse(azureRegion, appId, versionId, phraselistId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            phraselistId,
            options
        }, getPhraseListOperationSpec);
    }
    /**
     * Updates the phrases, the state and the name of the phraselist feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} phraselistId The ID of the feature to be updated.
     *
     * @param {FeaturesUpdatePhraseListOptionalParams} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    updatePhraseListWithHttpOperationResponse(azureRegion, appId, versionId, phraselistId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            phraselistId,
            options
        }, updatePhraseListOperationSpec);
    }
    /**
     * Deletes a phraselist feature.
     *
     * @param {AzureRegions} azureRegion Supported Azure regions for Cognitive Services endpoints.
     * Possible values include: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus',
     * 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
     *
     * @param {string} appId The application ID.
     *
     * @param {string} versionId The version ID.
     *
     * @param {number} phraselistId The ID of the feature to be deleted.
     *
     * @param {RequestOptionsBase} [options] Optional Parameters.
     *
     * @returns {Promise} A promise is returned
     *
     * @resolve {HttpOperationResponse} The deserialized result object.
     *
     * @reject {Error|ServiceError} The error object.
     */
    deletePhraseListWithHttpOperationResponse(azureRegion, appId, versionId, phraselistId, options) {
        return this.client.sendOperationRequest({
            azureRegion,
            appId,
            versionId,
            phraselistId,
            options
        }, deletePhraseListOperationSpec);
    }
    createPatternFeature(azureRegion, appId, versionId, patternCreateObject, options, callback) {
        return msRest.responseToBody(this.createPatternFeatureWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, patternCreateObject, options, callback);
    }
    getApplicationVersionPatternFeatures(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.getApplicationVersionPatternFeaturesWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    addPhraseList(azureRegion, appId, versionId, phraselistCreateObject, options, callback) {
        return msRest.responseToBody(this.addPhraseListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, phraselistCreateObject, options, callback);
    }
    listPhraseLists(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listPhraseListsWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    list(azureRegion, appId, versionId, options, callback) {
        return msRest.responseToBody(this.listWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, options, callback);
    }
    getPatternFeatureInfo(azureRegion, appId, versionId, patternId, options, callback) {
        return msRest.responseToBody(this.getPatternFeatureInfoWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, patternId, options, callback);
    }
    updatePatternFeature(azureRegion, appId, versionId, patternId, patternUpdateObject, options, callback) {
        return msRest.responseToBody(this.updatePatternFeatureWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, patternId, patternUpdateObject, options, callback);
    }
    deletePatternFeature(azureRegion, appId, versionId, patternId, options, callback) {
        return msRest.responseToBody(this.deletePatternFeatureWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, patternId, options, callback);
    }
    getPhraseList(azureRegion, appId, versionId, phraselistId, options, callback) {
        return msRest.responseToBody(this.getPhraseListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, phraselistId, options, callback);
    }
    updatePhraseList(azureRegion, appId, versionId, phraselistId, options, callback) {
        return msRest.responseToBody(this.updatePhraseListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, phraselistId, options, callback);
    }
    deletePhraseList(azureRegion, appId, versionId, phraselistId, options, callback) {
        return msRest.responseToBody(this.deletePhraseListWithHttpOperationResponse.bind(this), azureRegion, appId, versionId, phraselistId, options, callback);
    }
}
exports.Features = Features;
// Operation Specifications
const serializer = new msRest.Serializer(Mappers);
const createPatternFeatureOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patterns",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "patternCreateObject",
        mapper: Object.assign({}, Mappers.PatternCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Number"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getApplicationVersionPatternFeaturesOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patterns",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PatternFeatureInfo"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const addPhraseListOperationSpec = {
    httpMethod: "POST",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/phraselists",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    requestBody: {
        parameterPath: "phraselistCreateObject",
        mapper: Object.assign({}, Mappers.PhraselistCreateObject, { required: true })
    },
    responses: {
        201: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Number"
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listPhraseListsOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/phraselists",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: {
                serializedName: "parsedResponse",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PhraseListFeatureInfo"
                        }
                    }
                }
            }
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const listOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/features",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0
    ],
    queryParameters: [
        Parameters.skip,
        Parameters.take
    ],
    responses: {
        200: {
            bodyMapper: Mappers.FeaturesResponseObject
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPatternFeatureInfoOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patterns/{patternId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.patternId0
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PatternFeatureInfo
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updatePatternFeatureOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patterns/{patternId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.patternId0
    ],
    requestBody: {
        parameterPath: "patternUpdateObject",
        mapper: Object.assign({}, Mappers.PatternUpdateObject, { required: true })
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePatternFeatureOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/patterns/{patternId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.patternId0
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const getPhraseListOperationSpec = {
    httpMethod: "GET",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.phraselistId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.PhraseListFeatureInfo
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const updatePhraseListOperationSpec = {
    httpMethod: "PUT",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.phraselistId
    ],
    requestBody: {
        parameterPath: [
            "options",
            "phraselistUpdateObject"
        ],
        mapper: Mappers.PhraselistUpdateObject
    },
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
const deletePhraseListOperationSpec = {
    httpMethod: "DELETE",
    path: "luis/api/v2.0/apps/{appId}/versions/{versionId}/phraselists/{phraselistId}",
    urlParameters: [
        Parameters.azureRegion,
        Parameters.appId,
        Parameters.versionId0,
        Parameters.phraselistId
    ],
    responses: {
        200: {
            bodyMapper: Mappers.OperationStatus
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    serializer
};
//# sourceMappingURL=features.js.map